# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
/lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual Environment
venv/
env/
ENV/
.venv

# IDE
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store

# Environment variables
.env
.env.local
.env.*.local

# Database
*.db
*.sqlite3

# Logs
*.log
logs/

# Testing
.pytest_cache/
.coverage
htmlcov/
.tox/

# Jupyter Notebook
.ipynb_checkpoints

# Node (Frontend)
node_modules/
.next/
out/
.vercel
*.tsbuildinfo
next-env.d.ts

# Build
frontend/build/
frontend/dist/

# Playwright
playwright-report/
test-results/
playwright/.cache/

# Docker volumes (데이터는 볼륨에 저장되므로 제외)
postgres_data/
redis_data/

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Temporary files
*.tmp
*.temp
tmp/
temp/

# Crawler test data (captured API responses)
api_*.json
captured_*.json
all_api.json
all_captured_data.json
api_requests.json

# Test/Debug Python files (실험용 스크립트 - 개발 중 테스트용)
crawl_with_cookies.py
crawl_with_network.py
crawl_with_route.py
debug_dynamic_content.py
debug_page_structure.py
find_real_complex.py
intercept_api_responses.py
manual_network_check.py
quick_test.py
test_crawler.py
test_api_direct.py
crawl_real_complex.py
simple_crawl.py
save_to_db.py
init_db.py

# Screenshot files (크롤링 테스트 중 생성된 스크린샷)
*.png
!docs/screenshots/*.png
backend/*.png

# Keep production files:
# - advanced_crawler.py (프로덕션 크롤러)
# - check_data.py (데이터 확인 도구)
# - reset_db.py (DB 초기화 도구)
# - test_api.sh (API 테스트 스크립트)

# Archive folder (개발 중 생성된 테스트 파일 보관소)
# archive/  # docs/archive는 커밋에 포함

# Claude Code settings (AI 개발 도구 로컬 설정)
.claude/

# Scheduler config (환경별로 다른 설정 - Git 추적 제외)
backend/app/config/schedules.json
